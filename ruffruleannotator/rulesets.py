# Ruff special rule sets
SPECIAL_RULE_SETS = {"ALL": "All available rules"}

# Ruff predefined rule sets
RULE_SETS = {
    "F": "Pyflakes",
    "E": "pycodestyle errors",
    "W": "pycodestyle warnings",
    "C90": "mccabe",
    "I": "isort",
    "N": "pep8-naming",
    "D": "pydocstyle",
    "UP": "pyupgrade",
    "YTT": "flake8-2020",
    "ANN": "flake8-annotations",
    "ASYNC": "flake8-async",
    "S": "flake8-bandit",
    "BLE": "flake8-blind-except",
    "FBT": "flake8-boolean-trap",
    "B": "flake8-bugbear",
    "A": "flake8-builtins",
    "COM": "flake8-commas",
    "CPY": "flake8-copyright",
    "C4": "flake8-comprehensions",
    "DTZ": "flake8-datetimez",
    "T10": "flake8-debugger",
    "DJ": "flake8-django",
    "EM": "flake8-errmsg",
    "EXE": "flake8-executable",
    "FA": "flake8-future-annotations",
    "ISC": "flake8-implicit-str-concat",
    "ICN": "flake8-import-conventions",
    "LOG": "flake8-logging",
    "G": "flake8-logging-format",
    "INP": "flake8-no-pep420",
    "PIE": "flake8-pie",
    "T20": "flake8-print",
    "PYI": "flake8-pyi",
    "PT": "flake8-pytest-style",
    "Q": "flake8-quotes",
    "RSE": "flake8-raise",
    "RET": "flake8-return",
    "SLF": "flake8-self",
    "SLOT": "flake8-slot",
    "SIM": "flake8-simplify",
    "TID": "flake8-tidy-imports",
    "TCH": "flake8-type-checking",
    "INT": "flake8-gettext",
    "ARG": "flake8-unused-arguments",
    "PTH": "flake8-use-pathlib",
    "TD": "flake8-todos",
    "FIX": "flake8-fixme",
    "ERA": "eradicate",
    "PD": "pandas-vet",
    "PGH": "pygrep-hooks",
    "PL": "Pylint",
    "PLC": "Pylint [Convention]",
    "PLE": "Pylint [Error]",
    "PLR": "Pylint [Refactor]",
    "PLW": "Pylint [Warning]",
    "TRY": "tryceratops",
    "FLY": "flynt",
    "NPY": "NumPy-specfic rules",
    "FAST": "FastAPI",
    "AIR": "Airflow",
    "PERF": "Perflint",
    "FURB": "refurb",
    "DOC": "pydocstyle",
    "RUF": "Ruff-specfic rules",
}
